* Kripto

This is a simple PoC to encrypt and create secrets to a file and also decrypt and retrieve these from file.
Kripto uses self-signed certificates to keep things wrapped under ssl. One can always replace those with an actual valid CA.

** SSL

Generate self-signed certificates running:

#+BEGIN_EXAMPLE
make certificates
#+END_EXAMPLE

** Build

#+BEGIN_EXAMPLE
make build
#+END_EXAMPLE

** Run

#+BEGIN_EXAMPLE
make run
#+END_EXAMPLE

** Build container

#+BEGIN_EXAMPLE
make wrap
#+END_EXAMPLE

** Run within container

#+BEGIN_EXAMPLE
make docker-run
#+END_EXAMPLE

** Usage

Add user from kripto CLI

#+BEGIN_EXAMPLE
export PHRASE=$(cat .krpt)
kripto

Welcome to Kripto CLI! Type help for valid commands.
<kripto>::@ add ffhenkes@test
User added successfully "ffhenkes@***********"
<kripto>::@ quit

Good bye! Thank you for using Kripto!
#+END_EXAMPLE

Generate a JWT for further authentication

Returns *201 - Created*

#+BEGIN_EXAMPLE
curl -v -k \
  -XPOST \
  -d '{
  "username": "ffhenkes",
  "password": "test"
}' \
https://localhost:20443/v1/authenticate
#+END_EXAMPLE

Create secrets for an app

Returns *201 - Created*

#+BEGIN_EXAMPLE
curl -v -k \
  -XPOST \
  -H "Authorization: <your bearer token here>" \
  -d '{
  "app": "sample_app",
  "vars": {
     "SAMPLE_URI": "db://localhost:27017/sample",
     "SAMPLE_USER": "sampler",
     "SAMPLE_PASSWD": "onesamplepassword"
  }
}' \
https://localhost:20443/v1/secrets
#+END_EXAMPLE

Retrieve secrets from an app

Returns *200 - Ok*

#+BEGIN_EXAMPLE
curl -v -k \
  -XGET \
  -H "Authorization: <your bearer token here>" \
https://localhost:20443/v1/secrets?app=sample_app
#+END_EXAMPLE

Remove secrets from an app

Returns *204 - No Content*

#+BEGIN_EXAMPLE
curl -v -k \
  -XDELETE \
  -H "Authorization: <your bearer token here>" \
https://localhost:20443/v1/secrets?app=sample_app
#+END_EXAMPLE
